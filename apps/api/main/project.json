{
  "name": "api-main",
  "$schema": "../../../node_modules/nx/schemas/project-schema.json",
  "sourceRoot": "apps/api/main/src",
  "projectType": "application",
  "tags": [],
  "targets": {
    "sam:build": {
      "executor": "@nrwl/workspace:run-commands",
      "options": {
        "commands": [
          "concurrently --kill-others-on-fail -n build:nx,build:cdk \"nx build api-main\" \"cdk synth --no-staging > cdk.out/api-main.yaml\""
        ]
      }
    },
    "sam:run": {
      "executor": "@nrwl/workspace:run-commands",
      "options": {
        "commands": [
          "sam local invoke CRISBOARNA-Api-Main-DEV -n apps/api/main/sam-env.json -e apps/api/main/sam-event.json -t ./cdk.out/CRISBOARNA-Api-Main-DEV.template.json"
        ]
      }
    },
    "build": {
      "executor": "@nx/esbuild:esbuild",
      "outputs": ["{options.outputPath}"],
      "defaultConfiguration": "production",
      "options": {
        "platform": "node",
        "outputPath": "dist/apps/api/main",
        "format": ["cjs"],
        "bundle": true,
        "main": "apps/api/main/src/main.ts",
        "tsConfig": "apps/api/main/tsconfig.app.json",
        "assets": ["apps/api/main/src/assets"],
        "generatePackageJson": true,
        "esbuildOptions": {
          "sourcemap": true,
          "outExtension": {
            ".js": ".js"
          }
        }
      },
      "configurations": {
        "development": {},
        "production": {
          "generateLockfile": true,
          "esbuildOptions": {
            "sourcemap": false,
            "outExtension": {
              ".js": ".js"
            }
          }
        }
      }
    },
    "serve": {
      "executor": "@nx/js:node",
      "defaultConfiguration": "development",
      "options": {
        "buildTarget": "api-main:build"
      },
      "configurations": {
        "development": {
          "buildTarget": "api-main:build:development"
        },
        "production": {
          "buildTarget": "api-main:build:production"
        }
      }
    },
    "docker-build": {
      "dependsOn": ["build"],
      "command": "docker build -f apps/api/main/Dockerfile . -t api-main"
    }
  }
}
